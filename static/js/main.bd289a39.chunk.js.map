{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAGMA,EACG,mCADHA,EAEI,2CAuGKC,MApGf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KA8CA,OACI,qBACIC,UAC2B,oBAAhBF,EAAQG,MACTH,EAAQG,KAAKC,KAAO,GAChB,WAEJ,MANd,SASI,iCACI,qBAAKF,UAAU,aAAf,SACI,uBACIG,KAAK,OACLH,UAAU,aACVI,YAAY,qBACZC,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOC,QACnCA,MAAOZ,EACPa,WA9DL,SAACC,GACI,UAAZA,EAAIC,KACJC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACrDoB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WA2DQ,oBAAhBlB,EAAQG,KACZ,gCACI,sBAAKD,UAAU,eAAf,UACI,sBAAKA,UAAU,WAAf,UACKF,EAAQqB,KADb,KACqBrB,EAAQsB,IAAIC,WAEjC,qBAAKrB,UAAU,OAAf,SA5DJ,SAACsB,GACjB,IAuBIC,EATO,CACP,SACA,SACA,UACA,YACA,WACA,SACA,YAEWD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAzBS,CACT,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAaeL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,aAAkBE,EAAlB,YAA0BE,EAA1B,YAAmCE,GAgCVE,CAAY,IAAIC,WAIzB,sBAAKhC,UAAU,cAAf,UACI,sBAAKA,UAAU,OAAf,UACKiC,KAAKC,MAAMpC,EAAQG,KAAKC,MAD7B,WAGA,qBAAKF,UAAU,UAAf,SACKF,EAAQA,QAAQ,GAAGG,aAKhC,sBAAKD,UAAU,QAAf,UACE,gDADF,IACkB,uBADlB,uCCvFLmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.bd289a39.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nconst api = {\n    key: \"cab7fff80f74a9a4c4e0490bcae74faa\",\n    base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n    const [query, setQuery] = useState(\"\");\n    const [weather, setWeather] = useState({});\n\n    const search = (evt) => {\n        if (evt.key === \"Enter\") {\n            fetch(`${api.base}weather?q=${query}&units=metric&appid=${api.key}`)\n                .then((res) => res.json())\n                .then((result) => {\n                    setWeather(result);\n                    setQuery(\"\");\n                    console.log(result);\n                });\n        }\n    };\n\n    const dateBuilder = (d) => {\n        let months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ];\n        let days = [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n        ];\n        let day = days[d.getDay()];\n        let date = d.getDate();\n        let month = months[d.getMonth()];\n        let year = d.getFullYear();\n\n        return `${day}, ${date} ${month} ${year}`;\n    };\n\n    return (\n        <div\n            className={\n                typeof weather.main != \"undefined\"\n                    ? weather.main.temp > 16\n                        ? \"App warm\"\n                        : \"App\"\n                    : \"App\"\n            }\n        >\n            <main>\n                <div className=\"search-box\">\n                    <input\n                        type=\"text\"\n                        className=\"search-bar\"\n                        placeholder=\"Enter Your City...\"\n                        onChange={(e) => setQuery(e.target.value)}\n                        value={query}\n                        onKeyPress={search}\n                    />\n                </div>\n                {/* Assign Ternary Operator video time stamp26:43*/}\n                {typeof weather.main != \"undefined\" ? (\n                    <div>\n                        <div className=\"location-box\">\n                            <div className=\"location\">\n                                {weather.name}, {weather.sys.country}\n                            </div>\n                            <div className=\"date\">\n                                {dateBuilder(new Date())}\n                            </div>\n                        </div>\n\n                        <div className=\"weather-box\">\n                            <div className=\"temp\">\n                                {Math.round(weather.main.temp)}Â°C\n                            </div>\n                            <div className=\"weather\">\n                                {weather.weather[0].main}\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"error\">\n                      <span>ðŸš«</span> <br /> Please enter a proper City\n                    </div>\n                )}\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}